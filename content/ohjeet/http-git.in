<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<div>
<p>Tässä ohjeessa käsitellään kaksi tapaa, miten voit käyttää git-versionhallintaa http(s)-yhteyden ylitse. <a href="#ro">Ensimmäinen</a> tapa mahdollistaa vain varastosta (repository) lukemisen ja <a href="#rw">toinen</a> tapa sekä varastosta lukemisen, että sinne muutoksien tekemisen.</p>

<h2 id="ro"><a href="#ro" class="anchor">Vain luku -varaston pystyttäminen</a></h2>
<p>Jos sinulla ei ole tarvetta tai et halua, että git-varastoosi voi kirjoittaa, on tämä ohje sinulle sopiva. Tämä soveltuu esimerkiksi projektille, mille haluat git-varaston, josta käyttäjät voivat hakea uusimmat muutokset, mutta et halua, että sitä voi päivittää kukaan muu, kuin sinä. Vain luku -varaston pysyttäminen hyvin yksinkertainen toimenpide. Täytyy vain luoda uusi varasto ~/sites/domain.tld/www kansioon sopivaan paikkaan, luoda post-update tiedosto ja <a href="#siirto">siirtää</a> sinne tiedostot. Toimi seuraavasti.</p>
<pre>
mkdir ~/sites/domain.tld/www/git/myrepo.git
cd ~/sites/domain.tld/www/git/myrepo.git
git --bare init
cp hooks/post-update.sample hooks/post-update
</pre>
<p>Seuraavaksi siirrä alla olevan <a href="#siirto">ohjeen</a> mukaisesti tiedostot paikalleen.</p>
<p>Nyt sinulla on vain luku -varasto, joka löytyy osoitteesta http://domain.tld/git/myrepo.git. Voit lähettää omaan kopioon tekemäsi muutokset ssh:n avulla.</p>
<pre>
cd minunrepo
git remote add origin ssh://käyttäjätunnus@lakka.kapsi.fi/~/sites/domain.tld/www/git/myrepo.git
git push -u origin master
git commit
</pre>

<h2 id="roikeudet"><a href="#roikeudet" class="anchor">Lukuoikeuksien rajoittaminen</a></h2>
<p>Jos haluat rajoittaa vain luku -varastosi oikeudet vain tietyille käyttäjille, onnistuu tämä <a href="http://www.kapsi.fi/ohjeet/htpasswd.html">htpasswd:n</a> avulla. .htaccess tiedosto luodaan ~/sites/domain.tld/www/git/myrepo.git kansioon.</p>

<h2 id="rw"><a href="#rw" class="anchor">Luku- ja kirjotus -varaston asentaminen</a></h2>
<p>Tämä ohje käsittelee git-http-backend:in asentamista kapsin palvelimelle. Git-http-backend mahdollistaa gitin käyttämisen http(s)-yhteyden yli myös palvelimelle päin. Tämän avulla voit myös antaa kaverillesi luku- ja kirjotusoikeudet varastoosi. Varasto kannattaa mielellään tehdä secure-www:n alle, mikäli käytät kapsin tunnusta. Omilla tunnuksilla ei ole mahdollista käyttää ssl-suojausta, joten silloin on käytettävä http:tä.</p>
<p>Jos tarvitset vain lukukopion git-varastostasi, et tarvitse git-http-backendia. Ohje <a href="#ro">vain luku -varaston</a> pystyttämiseen löytyy ohjeen lopusta.</p>
<p>Korvaa domain.tld haluamallasi domainilla ja "tunnus" omalla käyttäjätunnuksellasi.</p>
<h2 id="repo"><a href="#repo" class="anchor">Luodaan uusi varasto</a></h2>
<p>Julkiseen jakoon tarkotettua varastoa varten on varasto luotava --bare option kanssa, jotta se toimisi push:in kanssa. Bare optio poistaa työkopion käytöstä, mitä suositellaan varastoihin johon lähetetään muutoksia push-käskyllä. Jos sinulla oli jo olemassa varasto, myöhemmin tulee kohta, missä siirretään olemassaoleva data nyt luotavaan varastoon.</p>
<pre>
mkdir ~/sites/domain.tld/code
git --bare init ~/sites/domain.tld/code/myrepo.git
</pre>
<p>Jatkossa tässä ohjeessa oletetaan, että varastot ovat ~/sites/tunnus.kapsi.fi/code hakemistossa.</p>

<h2 id="htpasswd"><a href="#htpasswd" class="anchor">Luodaan salasanatiedosto</a></h2>
<p>Tehdään kirjautumista varten salasanatiedosto. Tähän ei tulisi käyttää samaa salasanaa, mikä sinulla on lakalla.</p>
<pre>
htpasswd -c ~/sites/domain.tld/.gituser.passwd tunnus
&gt; salasana
&gt; salasana uusiksi
</pre>
<p>Jos tarvitset kirjoitusoikeudet myös kaverillesi ne voi lisätä seuraavasti. (Muistathan laittaa tarpeeksi vahvan salasana, vähintään 10 merkkiä pitkä ja tarpeeksi monimutkainen.)</p>
<pre>
htpasswd ~/.gituser.passwd kaverisi
&gt; Väh8merkk1äpitkävahva$a1asana
&gt; Väh8merkk1äpitkävahva$a1asana
</pre>

<h2 id="cgi"><a href="#cgi" class="anchor">"Luodaan .htaccess ja cgi-scripti</a></h2>
<p>Tehdään kansio https://domain.tld/git/ ja rajataan sen käyttö aikasemmin määritellylle käyttäjälle. Huomaa muuttaa "tunnus" kohdat omaksi käyttäjänimeksesi.</p>
<pre>
mkdir ~/sites/domain.tld/www/git
</pre>
<p>Muokataan seuraavaksi tiedoston  ~/sites/domain.tld/www/git/.htaccess sisällöksi.</p>
<pre>
RewriteEngine On
AcceptPathInfo On

RewriteCond %{REQUEST_URI} ^/(.*/(HEAD|info/refs|objects/(info/[^/]+|[0-9a-f]{2}/[0-9a-f]{38}|pack/pack-[0-9a-f]{40}\.(pack|idx))|git-(upload|receive)-pack))$
RewriteCond %{REQUEST_URI} !git-http-backend
RewriteRule (.*)$ /git/git-http-backend.cgi/$1 [L] 

Options -Indexes
AuthType Basic
AuthName "Private"
Require valid-user
AuthUserFile /var/www/userhome/tunnus/sites/domain.tld/.gituser.passwd
</pre>
<p>Hox! Vaikka lakalla ei ole /var/www/userhome/tunnus/ hakemistoa, löytyy semmoinen www-palvelimilta.</p>
<p>Koska ScriptAlias ei ole käytettävissä, täytyy git-http-backendiä käyttää cgi-scriptinä. Luodaan seuraavaksi cgi-scripti. Muokataan tiedoston ~/sites/domain.tld/secure-www/git/git-http-backend.cgi sisällöksi seuraavaa. Muuta kohta "tunnus" omaksi tunnukseksesi!</p>
<pre>
#!/bin/bash
export GIT_PROJECT_ROOT="/var/www/userhome/tunnus/sites/domain.tld/code/"
export GIT_HTTP_EXPORT_ALL=""
/usr/lib/git-core/git-http-backend
</pre>
<p>Ja annetaan vielä riittävät oikeudet</p>
<pre>
chmod 500  ~/sites/domain.tld/www/git/git-http-backend.cgi
</pre>

<h2 id="push"><a class="anchor" href="#push">Git push toimimaan</a></h2>
<p>Git varastolle pitää kertoa, että sitä saa päivittää git push:lla. Tämä onnistuu Lakka-palvelimella seuraavasti.</p>
<pre>
cd ~/code/myrepo.git
git config http.receivepack true
</pre>

<h2 id="siirto"><a href="#siirto" class="anchor">Datan siirtäminen vanhasta varastosta äskettäin luotuun uuteen varastoon.</a></h2>
<p>Jos sinulla on jo valmiiksi git-varasto, minkä haluat juuri luomaasi http-varastoon, toimi seuraavasti</p>
<pre>
cd minunrepo
git remote add origin https://tunnus@domain.tld/git/myrepo.git
git push -u origin master
</pre>
<p>Nyt tiedot ovat uudessa varastossa. Lisäksi jatkossa muutokset menevät automaattisesti uuteen varastoon.</p>

<h2 id="tyhja"><a href="#tyhja" class="anchor">Uuden varaston käyttäminen</a></h2>
<p>Mikäli sinulla ei ole valmiiksi git-varastoa, mutta haluat siirtää olemassaolevia tiedostoja tai luoda uusia, tee omalle koneellesi tai vaikka lakalle kopio tyhjästä varastosta ja siirrä tiedostot sinne.</p>
<pre>
git clone https://domain.tld/git/myrepo.git
cp olemassaolevatiedosto myrepo/
cd myrepo
git add olemassaolevatiedosto
git commit -m "viesti"
git push
</pre>
<p>Nyt tiedosto olemassaolevatiedosto on git-varastossa. Voit samalla kertaa lisätä useita tiedostoja ja kansiota. Suorita vain "git add tiedosto" jokaiselle lisättävälle tiedostolle.</p>

<h2>Käyttämään!</h2>
<p>Jos et vielä kopioinut luomaasi git varastoa on seuraava vaihe kokeilla git-varaston toimintaa.</p>
<pre>
git clone https://tunnus@domain.tld/git/myrepo.git
</pre>

<p>Lisää tietoa gitistä on englanniksi <a href="http://git-scm.com/documentation" title="Git - Fast Version Control System">gitin kotisivuilta löytyvässä dokumentaatiossa</a>.</p>

<h2 id="rajoitukset"><a class="anchor" href="#rajoitukset">Rajoituksia ja muuta huomattavaa</a></h2>
<p>Jos lisäät jollekin käyttäjälle oikeudet htpasswd tiedostoon, tällä käyttällä on luku- ja kirjoitusoikeudet kaikkiin ~/code/ kansion alla oleviin varastoihin. Helpoin ja ainoa tapa rajottaa käyttäjiä on tehdä jaettua varastoa varten tällä ohjeella toinen vastaavanlainen sivu, mutta kuitenkin muuttaen gituser.passwd vaikka gitpubuser.passwd:ksi ja /git kansion joksikin muuksi sekä tekemällä toinen code kansio jaettua varastoa varten.</p>
</div>
